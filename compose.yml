services:
  #Run this version of the kafka container if you want to use the host's network - like running the code locally
  kafka-local:
    image: apache/kafka:4.0.0
    container_name: kafka-local
    restart: on-failure
    ports:
      - '9092:9092'

  #Run this version of the kafka container if you want to use the docker network - like running the containerised version of the application
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    restart: on-failure
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092  # to resolve routing issues in docker
      # the rest are default values for KRaft mode, but need to be specified if anything is changed
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
      - KAFKA_KRAFT_CLUSTER_ID=kibit
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3

  postgres:
    image: postgres:15
    container_name: postgres
    restart: on-failure
    volumes:
      - ./docker-db-schema-init.sql:/docker-entrypoint-initdb.d/init-schema.sql
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=kibit
      - POSTGRES_USER=kibit
      - POSTGRES_DB=kibit

  payment-mock:
    image: gerabarna/payment-mock
    ports:
      - '8080:8080'
    depends_on:
      - kafka
      - postgres
    environment:
      - DB_POSTGRES_HOST=postgres:5432
      - KAFKA_BOOTSTRAP_HOST=kafka:9092
